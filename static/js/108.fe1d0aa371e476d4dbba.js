(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{562:function(s,a,t){"use strict";t.r(a);var l=t(0);const n={class:"zarm-vue-demo"},e={class:"za-panel"},p=Object(l.i)("div",{class:"za-panel__header"},[Object(l.i)("div",{class:"za-panel__title"},"提示信息 ")],-1),c={class:"za-panel__body"},i=Object(l.h)("开启"),o=Object(l.h)("开启"),h=Object(l.h)("开启"),j=Object(l.h)("默认3秒自动关闭"),r={class:"box"},g=Object(l.i)("div",{class:"box-text"},"预约成功",-1),d=Object(l.h)("指定10秒自动关闭"),b={class:"za-panel"},u=Object(l.i)("div",{class:"za-panel__header"},[Object(l.i)("div",{class:"za-panel__title"},"加载中 ")],-1),v={class:"za-panel__body"},m=Object(l.h)("开启"),z={class:"za-panel"},q=Object(l.i)("div",{class:"za-panel__header"},[Object(l.i)("div",{class:"za-panel__title"},"函数调用 ")],-1),O={class:"za-panel__body"},f=Object(l.h)("开启"),x=Object(l.g)('<div class="zarm-markdown-doc"><h2>轻提示 Toast</h2><div class="demo custom-block"><p class="custom-block-title">提示信息</p><pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">za-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;错误提示&quot;</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:description</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">za-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;xs&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;error&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible1 = true&quot;</span>&gt;</span>开启<span class="hljs-tag">&lt;/<span class="hljs-name">za-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  \n<span class="hljs-tag">&lt;/<span class="hljs-name">za-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">za-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;成功提示&quot;</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:description</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">za-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;xs&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;description&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible2 = true&quot;</span>&gt;</span>开启<span class="hljs-tag">&lt;/<span class="hljs-name">za-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  \n<span class="hljs-tag">&lt;/<span class="hljs-name">za-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">za-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;指定关闭时间&quot;</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:description</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">za-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;xs&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible3 = true&quot;</span>&gt;</span>开启<span class="hljs-tag">&lt;/<span class="hljs-name">za-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  \n<span class="hljs-tag">&lt;/<span class="hljs-name">za-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">za-toast</span> <span class="hljs-attr">v-model:visible</span>=<span class="hljs-string">&quot;visible1&quot;</span> @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;toastClose&quot;</span>&gt;</span>默认3秒自动关闭<span class="hljs-tag">&lt;/<span class="hljs-name">za-toast</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">za-toast</span> <span class="hljs-attr">v-model:visible</span>=<span class="hljs-string">&quot;visible2&quot;</span> @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;toastClose&quot;</span> @<span class="hljs-attr">maskClick</span>=<span class="hljs-string">&quot;visible2 = false&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">za-icon</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;right-round-fill&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box-icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">za-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box-text&quot;</span>&gt;</span>预约成功<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">za-toast</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">za-toast</span> <span class="hljs-attr">v-model:visible</span>=<span class="hljs-string">&quot;visible3&quot;</span> @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;toastClose&quot;</span> <span class="hljs-attr">:duration</span>=<span class="hljs-string">&quot;10000&quot;</span>&gt;</span>指定10秒自动关闭<span class="hljs-tag">&lt;/<span class="hljs-name">za-toast</span>&gt;</span>\n</code></pre></div><div class="demo custom-block"><p class="custom-block-title">加载中</p><pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">za-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Loading&quot;</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:description</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">za-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;xs&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible4 = true&quot;</span>&gt;</span>开启<span class="hljs-tag">&lt;/<span class="hljs-name">za-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  \n<span class="hljs-tag">&lt;/<span class="hljs-name">za-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">za-loading</span> <span class="hljs-attr">v-model:visible</span>=<span class="hljs-string">&quot;visible4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">za-loading</span>&gt;</span>\n</code></pre></div><div class="demo custom-block"><p class="custom-block-title">函数调用</p><pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">za-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;$zaToast&quot;</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:description</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">za-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;xs&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;error&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showToast&quot;</span>&gt;</span>开启<span class="hljs-tag">&lt;/<span class="hljs-name">za-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  \n<span class="hljs-tag">&lt;/<span class="hljs-name">za-cell</span>&gt;</span>\n</code></pre></div><p><code>zarm-vue 为 Vue.prototype 上添加了全局方法：$zaToast 因此在 vue instance 内可以采用 this.$zaToast(messgae, options) 或 this.$zaToast(options) 的方式调用</code>。</p><h4>普通</h4><pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      show() {\n        <span class="hljs-keyword">this</span>.$zaToast(<span class="hljs-string">&#39;this is toast&#39;</span>)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre><h4>指定停留时间</h4><pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      show() {\n        <span class="hljs-keyword">this</span>.$zaToast(<span class="hljs-string">&#39;toast last for 5 sec&#39;</span>, {\n          <span class="hljs-attr">duration</span>: <span class="hljs-number">5000</span>\n        })\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre><h3>Vue Script</h3><pre class="hljs"><code>&lt;script name=<span class="hljs-string">&quot;vue&quot;</span>&gt;\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  data() {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">visible1</span>: <span class="hljs-literal">false</span>,\n      <span class="hljs-attr">visible2</span>: <span class="hljs-literal">false</span>,\n      <span class="hljs-attr">visible3</span>: <span class="hljs-literal">false</span>,\n      <span class="hljs-attr">visible4</span>: <span class="hljs-literal">false</span>,\n      <span class="hljs-attr">isLoading</span>: <span class="hljs-literal">false</span>\n    }\n  },\n  <span class="hljs-attr">methods</span>: {\n    showToast() {\n      <span class="hljs-keyword">this</span>.$zaToast(<span class="hljs-string">&#39;this is toast&#39;</span>)\n    },\n    toastClose(reason, event){\n      <span class="hljs-built_in">console</span>.log(reason, event);\n    }\n  },\n};\n&lt;<span class="hljs-regexp">/script&gt;\n</span></code></pre><h3>API</h3><h4>Toast Attributes</h4><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">可选值／参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">visible</td><td style="text-align:left;">boolean</td><td style="text-align:left;">false</td><td style="text-align:left;"></td><td style="text-align:left;">是否显示, 支持.sync 修饰符 (v2.3.0+)</td></tr><tr><td style="text-align:left;">duration</td><td style="text-align:left;">number</td><td style="text-align:left;">3000</td><td style="text-align:left;"></td><td style="text-align:left;">自动关闭前停留的时间（单位：毫秒）</td></tr></tbody></table><h4>Toast Event</h4><table><thead><tr><th style="text-align:left;">事件名称</th><th style="text-align:left;">说明</th><th style="text-align:left;">回调参数</th></tr></thead><tbody><tr><td style="text-align:left;">close</td><td style="text-align:left;">toast 关闭时触发</td><td style="text-align:left;">关闭时触发的回调函数</td></tr><tr><td style="text-align:left;">mask-click</td><td style="text-align:left;">点击遮罩后触发的事件</td><td style="text-align:left;">event 事件对象</td></tr></tbody></table></div>',1);var y={data:()=>({visible1:!1,visible2:!1,visible3:!1,visible4:!1,isLoading:!1}),methods:{showToast(){this.$zaToast("this is toast")},toastClose(s,a){console.log(s,a)}},render:function(s,a,t,y,k,_){const w=Object(l.B)("za-button"),C=Object(l.B)("za-cell"),T=Object(l.B)("za-toast"),K=Object(l.B)("za-icon"),$=Object(l.B)("za-loading");return Object(l.t)(),Object(l.e)("div",null,[Object(l.i)("div",n,[Object(l.i)("div",e,[p,Object(l.i)("div",c,[Object(l.i)(C,{title:"错误提示"},{description:Object(l.K)(()=>[Object(l.i)(w,{size:"xs",theme:"error",onClick:a[1]||(a[1]=s=>k.visible1=!0)},{default:Object(l.K)(()=>[i]),_:1})]),_:1}),Object(l.i)(C,{title:"成功提示"},{description:Object(l.K)(()=>[Object(l.i)(w,{size:"xs",theme:"success",slot:"description",onClick:a[2]||(a[2]=s=>k.visible2=!0)},{default:Object(l.K)(()=>[o]),_:1})]),_:1}),Object(l.i)(C,{title:"指定关闭时间"},{description:Object(l.K)(()=>[Object(l.i)(w,{size:"xs",onClick:a[3]||(a[3]=s=>k.visible3=!0)},{default:Object(l.K)(()=>[h]),_:1})]),_:1}),Object(l.i)(T,{visible:k.visible1,"onUpdate:visible":a[4]||(a[4]=s=>k.visible1=s),onClose:_.toastClose},{default:Object(l.K)(()=>[j]),_:1},8,["visible","onClose"]),Object(l.i)(T,{visible:k.visible2,"onUpdate:visible":a[5]||(a[5]=s=>k.visible2=s),onClose:_.toastClose,onMaskClick:a[6]||(a[6]=s=>k.visible2=!1)},{default:Object(l.K)(()=>[Object(l.i)("div",r,[Object(l.i)(K,{type:"right-round-fill",class:"box-icon"}),g])]),_:1},8,["visible","onClose"]),Object(l.i)(T,{visible:k.visible3,"onUpdate:visible":a[7]||(a[7]=s=>k.visible3=s),onClose:_.toastClose,duration:1e4},{default:Object(l.K)(()=>[d]),_:1},8,["visible","onClose"])])]),Object(l.i)("div",b,[u,Object(l.i)("div",v,[Object(l.i)(C,{title:"Loading"},{description:Object(l.K)(()=>[Object(l.i)(w,{size:"xs",onClick:a[8]||(a[8]=s=>k.visible4=!0)},{default:Object(l.K)(()=>[m]),_:1})]),_:1}),Object(l.i)($,{visible:k.visible4,"onUpdate:visible":a[9]||(a[9]=s=>k.visible4=s)},null,8,["visible"])])]),Object(l.i)("div",z,[q,Object(l.i)("div",O,[Object(l.i)(C,{title:"$zaToast"},{description:Object(l.K)(()=>[Object(l.i)(w,{size:"xs",theme:"error",onClick:_.showToast},{default:Object(l.K)(()=>[f]),_:1},8,["onClick"])]),_:1})])])]),x])}};a.default=y}}]);