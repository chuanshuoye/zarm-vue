(window.webpackJsonp=window.webpackJsonp||[]).push([[58,89],{390:function(s,a,n){"use strict";n.r(a);var t=n(1);const l={class:"zarm-vue-demo"},e={class:"za-panel"},c=Object(t.createVNode)("div",{class:"za-panel__header"},[Object(t.createVNode)("div",{class:"za-panel__title"},"基本 ")],-1),p={class:"za-panel__body"},r={class:"grid"},o={class:"icon-name"},i={class:"za-panel"},d=Object(t.createVNode)("div",{class:"za-panel__header"},[Object(t.createVNode)("div",{class:"za-panel__title"},"Iconfont Symbol自定义图标 ")],-1),h={class:"za-panel__body"},g={class:"grid"},j={class:"grid-column",style:{width:"33.33%",display:"inline-block",padding:"15px","text-align":"center"}},u=Object(t.createVNode)("span",{class:"icon-name"},"home",-1),m={class:"grid-column",style:{width:"33.33%",display:"inline-block",padding:"15px","text-align":"center"}},b=Object(t.createVNode)("span",{class:"icon-name"},"insurance",-1),f={class:"grid-column",style:{width:"33.33%",display:"inline-block",padding:"15px","text-align":"center"}},y=Object(t.createVNode)("span",{class:"icon-name"},"user",-1),q={class:"zarm-markdown-doc"},w=Object(t.createVNode)("h2",null,"图标 Icon",-1),O={class:"demo custom-block"},v=Object(t.createVNode)("p",{class:"custom-block-title"},"基本",-1),x={class:"hljs"},N=Object(t.createStaticVNode)('<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;grid&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(i, index) in ICONS&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;grid-column&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 33.33%;display: inline-block;padding: 15px;text-align: center;&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">za-icon</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">:type</span>=<span class="hljs-string">&quot;i&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">za-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-name&quot;</span>&gt;</span>',8),V=Object(t.createStaticVNode)('<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n',6),k=Object(t.createStaticVNode)('<div class="demo custom-block"><p class="custom-block-title">Iconfont Symbol自定义图标</p><pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;grid&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;grid-column&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 33.33%;display: inline-block;padding: 15px;text-align: center;&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">za-icon</span> <span class="hljs-attr">tag</span>=<span class="hljs-string">&quot;symbol&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;home&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">za-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-name&quot;</span>&gt;</span>home<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;grid-column&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 33.33%;display: inline-block;padding: 15px;text-align: center;&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">za-icon</span> <span class="hljs-attr">tag</span>=<span class="hljs-string">&quot;symbol&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;insurance&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">za-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-name&quot;</span>&gt;</span>insurance<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;grid-column&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 33.33%;display: inline-block;padding: 15px;text-align: center;&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">za-icon</span> <span class="hljs-attr">tag</span>=<span class="hljs-string">&quot;symbol&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">za-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon-name&quot;</span>&gt;</span>user<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre></div><blockquote><p>Iconfont Symbol使用说明</p></blockquote><pre class="hljs"><code><span class="hljs-keyword">import</span> { Icon } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;zarm-vue&#39;</span>;\nIcon.createSymbolIconfont(<span class="hljs-string">&#39;//at.alicdn.com/t/font_1340918_4p9b5skcr79.js&#39;</span>);\n</code></pre><h3>Vue Script</h3><pre class="hljs"><code>&lt;script name=<span class="hljs-string">&quot;vue&quot;</span>&gt;\n<span class="hljs-keyword">const</span> ICONS = [\n  <span class="hljs-string">&#39;right&#39;</span>, <span class="hljs-string">&#39;right-round&#39;</span>, <span class="hljs-string">&#39;right-round-fill&#39;</span>,\n  <span class="hljs-string">&#39;wrong&#39;</span>, <span class="hljs-string">&#39;wrong-round&#39;</span>, <span class="hljs-string">&#39;wrong-round-fill&#39;</span>,\n  <span class="hljs-string">&#39;info-round&#39;</span>, <span class="hljs-string">&#39;info-round-fill&#39;</span>,\n  <span class="hljs-string">&#39;question-round&#39;</span>, <span class="hljs-string">&#39;question-round-fill&#39;</span>,\n  <span class="hljs-string">&#39;warning-round&#39;</span>, <span class="hljs-string">&#39;warning-round-fill&#39;</span>,\n  <span class="hljs-string">&#39;arrow-left&#39;</span>, <span class="hljs-string">&#39;arrow-right&#39;</span>, <span class="hljs-string">&#39;arrow-top&#39;</span>, <span class="hljs-string">&#39;arrow-bottom&#39;</span>,\n  <span class="hljs-string">&#39;add&#39;</span>, <span class="hljs-string">&#39;add-round&#39;</span>, <span class="hljs-string">&#39;add-round-fill&#39;</span>,\n  <span class="hljs-string">&#39;minus&#39;</span>, <span class="hljs-string">&#39;minus-round&#39;</span>, <span class="hljs-string">&#39;minus-round-fill&#39;</span>,\n  <span class="hljs-string">&#39;broadcast&#39;</span>, <span class="hljs-string">&#39;search&#39;</span>,\n].sort();\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  data() {\n    <span class="hljs-keyword">return</span> {\n      ICONS,\n      <span class="hljs-attr">i</span>: <span class="hljs-literal">null</span>\n    }\n  }\n};\n&lt;<span class="hljs-regexp">/script&gt;\n</span></code></pre><h3>API</h3><h4>Icon Attributes</h4><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">可选值／参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">theme</td><td style="text-align:left;">string</td><td style="text-align:left;">&#39;default&#39;</td><td style="text-align:left;">&#39;default&#39;, &#39;primary&#39;, &#39;info&#39;, &#39;success&#39;, &#39;warning&#39;, &#39;error&#39;</td><td style="text-align:left;">主题</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:left;">string</td><td style="text-align:left;"></td><td style="text-align:left;">&#39;right&#39;, &#39;right-round&#39;, &#39;right-round-fill&#39;,&#39;wrong&#39;, &#39;wrong-round&#39;, &#39;wrong-round-fill&#39;, &#39;info-round&#39;, &#39;info-round-fill&#39;, &#39;question-round&#39;, &#39;question-round-fill&#39;, &#39;warning-round&#39;, &#39;warning-round-fill&#39;, &#39;arrow-left&#39;, &#39;arrow-right&#39;, &#39;arrow-top&#39;, &#39;arrow-bottom&#39;, &#39;add&#39;, &#39;add-round&#39;, &#39;add-round-fill&#39;, &#39;minus&#39;, &#39;minus-round&#39;, &#39;minus-round-fill&#39;, &#39;broadcast&#39;, &#39;search&#39;</td><td style="text-align:left;">图标类型</td></tr><tr><td style="text-align:left;">tag</td><td style="text-align:left;">string</td><td style="text-align:left;"></td><td style="text-align:left;">&#39;symbol&#39;</td><td style="text-align:left;">iconfont symbol类型图标</td></tr></tbody></table>',8);const z=["right","right-round","right-round-fill","wrong","wrong-round","wrong-round-fill","info-round","info-round-fill","question-round","question-round-fill","warning-round","warning-round-fill","arrow-left","arrow-right","arrow-top","arrow-bottom","add","add-round","add-round-fill","minus","minus-round","minus-round-fill","broadcast","search"].sort();var I={data:()=>({ICONS:z,i:null}),render:function(s,a,n,z,I,S){const _=Object(t.resolveComponent)("za-icon");return Object(t.openBlock)(),Object(t.createBlock)("div",null,[Object(t.createVNode)("div",l,[Object(t.createVNode)("div",e,[c,Object(t.createVNode)("div",p,[Object(t.createVNode)("div",r,[(Object(t.openBlock)(!0),Object(t.createBlock)(t.Fragment,null,Object(t.renderList)(I.ICONS,(s,a)=>(Object(t.openBlock)(),Object(t.createBlock)("div",{class:"grid-column",style:{width:"33.33%",display:"inline-block",padding:"15px","text-align":"center"},key:a},[Object(t.createVNode)(_,{theme:"primary",type:s,class:"icon"},null,8,["type"]),Object(t.createVNode)("span",o,Object(t.toDisplayString)(s),1)]))),128))])])]),Object(t.createVNode)("div",i,[d,Object(t.createVNode)("div",h,[Object(t.createVNode)("div",g,[Object(t.createVNode)("div",j,[Object(t.createVNode)(_,{tag:"symbol",theme:"primary",type:"home",class:"icon"}),u]),Object(t.createVNode)("div",m,[Object(t.createVNode)(_,{tag:"symbol",theme:"primary",type:"insurance",class:"icon"}),b]),Object(t.createVNode)("div",f,[Object(t.createVNode)(_,{tag:"symbol",theme:"primary",type:"user",class:"icon"}),y])])])])]),Object(t.createVNode)("div",q,[w,Object(t.createVNode)("div",O,[v,Object(t.createVNode)("pre",x,[Object(t.createVNode)("code",null,[N,Object(t.createTextVNode)(Object(t.toDisplayString)(I.i),1),V])])]),k])])}};a.default=I},428:function(s,a,n){},512:function(s,a,n){"use strict";n.r(a);var t=n(1);var l=n(390),e=n(110),c=n(111),p=n(112),r=(n(428),["right","right-round","right-round-fill","wrong","wrong-round","wrong-round-fill","info-round","info-round-fill","question-round","question-round-fill","warning-round","warning-round-fill","arrow-left","arrow-right","arrow-top","arrow-bottom","add","add-round","add-round-fill","minus","minus-round","minus-round-fill","broadcast"].sort(),{components:{Container:e.a,PageHeader:c.a,PageFooter:p.a,Demo:l.default},render:function(s,a,n,l,e,c){const p=Object(t.resolveComponent)("PageHeader"),r=Object(t.resolveComponent)("Demo"),o=Object(t.resolveComponent)("PageFooter"),i=Object(t.resolveComponent)("Container");return Object(t.openBlock)(),Object(t.createBlock)(i,{class:"icon-page"},{default:Object(t.withCtx)(()=>[Object(t.createVNode)(p,{title:"图标 Icon"}),Object(t.createVNode)(r),Object(t.createVNode)(o)]),_:1})}});a.default=r}}]);