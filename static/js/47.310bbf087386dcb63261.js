(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{537:function(s,a,e){},539:function(s,a,e){"use strict";e(537)},540:function(s,a,e){"use strict";var n=e(0);const t=Object(n.N)("data-v-4d605d3f");Object(n.w)("data-v-4d605d3f");const c={class:"main-container"};Object(n.u)();const l=t((function(s,a,e,t,l,o){return Object(n.t)(),Object(n.e)("main",null,[Object(n.i)("div",c,[Object(n.A)(s.$slots,"default")])])}));var o={data:()=>({}),components:{},created(){},mounted(){},methods:{}};e(539);o.render=l,o.__scopeId="data-v-4d605d3f";a.a=o},550:function(s,a,e){},636:function(s,a,e){"use strict";e(550)},673:function(s,a,e){"use strict";e.r(a);var n=e(0);const t=Object(n.N)("data-v-5307436f"),c=t((function(s,a,e,c,l,o){const p=Object(n.B)("Demo"),r=Object(n.B)("Container");return Object(n.t)(),Object(n.e)(r,{class:"document-quick-start"},{default:t(()=>[Object(n.i)(p)]),_:1})}));var l=e(540);const o=Object(n.g)('<div class="zarm-vue-demo"></div><div class="zarm-markdown-doc"><blockquote><h2>可视化生成自定义主题</h2></blockquote><p>如果仅希望更换 ZarmVue 的品牌色，推荐使用<a href="https://chuanshuoye.github.io/zarm-vue-chalk/#/">在线主题生成工具</a>。通过替换主题色，能够让 ZarmVue 的视觉更加符合具体项目的定位。</p><p>使用上述工具，可以很方便地实时预览主题色改变之后的视觉，同时它还可以基于新的主题色生成完整的样式文件包，供直接下载使用。</p><blockquote><h2>动态修改variables.scss常量实现自定义主题</h2></blockquote><p>写入以下内容：</p><pre class="hljs"><code><span class="hljs-keyword">import</span> <span class="hljs-string">&#39;zarm-vue/styles/default.scss&#39;</span>; <span class="hljs-comment">// zarm-vue组件默认函数以及variables</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;zarm-vue/styles/custom-variables.scss&#39;</span>;  <span class="hljs-comment">// 用户自定义的variables覆盖默认常量配置</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;zarm-vue/styles/components.scss&#39;</span>; <span class="hljs-comment">// 加载组件样式</span>\n\n<span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> ZarmVue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;zarm-vue&#39;</span>\nVue.use(ZarmVue)\n</code></pre><blockquote><h2>命令行自定义主题</h2></blockquote><p>ZarmVue 的样式使用 SCSS 编写，如果你的项目也使用了 SCSS，那么可以直接在项目中改变 ZarmVue 的样式变量。</p><p>clone本仓库后先安装依赖，然后通过修改 <code>styles/variables.scss</code> 文件重写sass变量。</p><p>写入以下内容：</p><pre class="hljs"><code>\n// 基础\n$<span class="hljs-selector-tag">base-fontSize</span>: 14;\n$<span class="hljs-selector-tag">placeholder-color</span>: <span class="hljs-selector-id">#a9a9a9</span>;\n\n// 图标字体\n$<span class="hljs-selector-tag">icon-url</span>: &#39;//<span class="hljs-selector-tag">at</span><span class="hljs-selector-class">.alicdn</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">t</span>/<span class="hljs-selector-tag">font_126288_147h8m0m5se5ewmi</span>&#39;;\n\n// 主题\n$<span class="hljs-selector-tag">theme-default</span>: <span class="hljs-selector-id">#e6e6e6</span>;\n$<span class="hljs-selector-tag">theme-default-light</span>: <span class="hljs-selector-tag">rgba</span>($<span class="hljs-selector-tag">theme-default</span>, 0<span class="hljs-selector-class">.5</span>);\n$<span class="hljs-selector-tag">theme-default-dark</span>: <span class="hljs-selector-tag">darken</span>($<span class="hljs-selector-tag">theme-default</span>, 10%);\n\n// ...\n\n</code></pre><p>运行下面命令生成新样式：</p><pre class="hljs"><code>npm run build:theme\n</code></pre><p>新生成的样式文件： <code>lib/zarm-vue.default.css</code></p><p>之后，在项目的入口文件中，直接引入以上样式文件即可（无需引入 ZarmVue 编译好的 CSS 文件）：</p><pre class="hljs"><code>import Vue from &#39;vue&#39;\nimport ZarmVue from &#39;zarm-vue&#39;\nimport &#39;./zarm-vue.default.css&#39;\n\nVue.use(ZarmVue)\n</code></pre></div>',2);const p={render:function(s,a,e,t,c,l){return Object(n.t)(),Object(n.e)("div",null,[o])}};var r=p,u={components:{Container:l.a,Demo:r}};e(636);u.render=c,u.__scopeId="data-v-5307436f";a.default=u}}]);